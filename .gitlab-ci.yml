default:
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind

stages:
  - build
  - test
  - release

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY


#
# AUTH
#

.auth-config:
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/auth
    CONTAINER_TEST_IMAGE: $IMAGE_NAME:$CI_COMMIT_REF_SLUG
    CONTAINER_RELEASE_IMAGE: $IMAGE_NAME:latest

build-auth:
  stage: build
  extends: .auth-config
  script:
    - docker build --build-arg GITLAB_TOKEN=$GITLAB_TOKEN --pull -t $CONTAINER_TEST_IMAGE ./auth
    - docker push $CONTAINER_TEST_IMAGE

test-auth:
  stage: test
  extends: .auth-config
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run $CONTAINER_TEST_IMAGE npm run test:ci

release-auth:
  stage: release
  extends: .auth-config
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - main


#
# TICKETS
#

.tickets-config:
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/tickets
    CONTAINER_TEST_IMAGE: $IMAGE_NAME:$CI_COMMIT_REF_SLUG
    CONTAINER_RELEASE_IMAGE: $IMAGE_NAME:latest

build-tickets:
  stage: build
  extends: .tickets-config
  script:
    - docker build --build-arg GITLAB_TOKEN=$GITLAB_TOKEN --pull -t $CONTAINER_TEST_IMAGE ./tickets
    - docker push $CONTAINER_TEST_IMAGE

test-tickets:
  stage: test
  extends: .tickets-config
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run $CONTAINER_TEST_IMAGE npm run test:ci

release-tickets:
  stage: release
  extends: .tickets-config
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - main


#
# CLIENT
#

.client-config:
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/client
    CONTAINER_TEST_IMAGE: $IMAGE_NAME:$CI_COMMIT_REF_SLUG
    CONTAINER_RELEASE_IMAGE: $IMAGE_NAME:latest

build-client:
  stage: build
  extends: .client-config
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE ./client
    - docker push $CONTAINER_TEST_IMAGE

release-client:
  stage: release
  extends: .client-config
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - main


#
# COMMON
#

release-common:
  stage: release
  image: node:latest
  before_script:
    - cd common
    - npm ci --cache .npm --prefer-offline
    - |
      {
        echo "@${CI_PROJECT_ROOT_NAMESPACE}:registry=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/"
        echo "${CI_API_V4_URL#https?}/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=\${CI_JOB_TOKEN}"
      } | tee -a .npmrc
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/
  variables:
    NPM_TOKEN: ${CI_JOB_TOKEN}
  script:
    - pwd
    - echo $NPM_TOKEN
    - cat .npmrc
    - npm run build
    - npm run semantic-release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
